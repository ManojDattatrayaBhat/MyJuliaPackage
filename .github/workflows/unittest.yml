name: UnitTest
on:
  pull_request:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PR_NUMBER: ${{ github.event.pull_request.number }}
jobs:
  test:
    name: Unit Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Check if the PR is approved
        id: pr-approval-check
        run: |
          APPROVED=$(gh api graphql -f query='
            query($prNumber: Int!) {
              repository(owner: "OWNER", name: "REPO") {
                pullRequest(number: $prNumber) {
                  reviews(last: 100) {
                    nodes {
                      state
                      author {
                        login
                      }
                      dismissedAt
                    }
                  }
                }
              }
            }
          ' -f prNumber=$PR_NUMBER --jq '.data.repository.pullRequest.reviews.nodes | map(select(.state == "APPROVED" and .dismissedAt == null)) | length > 0')
          echo "approved=$APPROVED"

      - name: Debug PR reviews
        run: |
          gh pr view $PR_NUMBER --json reviews > reviews.json
          cat reviews.json
